<style>
  .order-table {
    margin-left: 6%;
    margin-right: 3%;
  }
  table {
    font-family: Helvetica, sans-serif;
    width: 100%;
    margin: 0;
    padding: 0;
  }
  td, th {
    text-align: center;
    vertical-align: middle;
    font-size: 1.3em;
    padding: 5px 0 5px 0;
    word-break: break-all;
  }
  thead {
    font-weight: bold;
    font-size: 1.2em;
  }
  .order-item {
    text-align: left;
    font-weight: 600;
    font-size: 1.4em;
    max-width: 140px;
    min-width: 60px;
  }
  select {
    width: 180px;
    padding: 0 10px 0 60px;
    border-radius: 5px;
    border: solid 2px <%= order.status == 'active' ? '#93d86e' : '#ff3333' %>;
    background-color: <%= order.status == 'active' ? '#93d86e' : '#ff3333' %>;
    font-size: 1.3em;
  }
  .order-field {
    text-align: center;
    width: 100%;
    padding: .375rem .75rem;
    font-size: 1.4rem;
    line-height: 1.5;
    color: #495057;
    background-color: #fff;
    border: 1px solid #ced4da;
    border-radius: .25rem;
    height: 50px !important;
  }
  .new-order-item {
    text-align: left;
    font-size: 1.4rem;
  }
  #order-button {
    margin-bottom: 10px;
  }
  #print-button {
    position: relative;
    bottom: -10px;
    left: 50%;
  }
  .new-order-select {
    padding: .87rem;
    width: 185px;
  }
  .order-paymethod {
    border: none;
  }

  @media all and (max-width: 600px) {
    .order-item {
      font-size: 1.2em;
    }
    .order-field {
      font-size: 1.2em;
    }
    .new-order-select {
      font-size: 1em;
      width: 120px;
    }
    select {
      width: 120px;
      padding: 0 10px 0 25px;
    }
  }
  .blue-btns a{
    padding: 8px 11px;
  }
</style>

<%= form_with(model: order, url: order.new_record? ? app_create_staff_order_path(current_app) : app_order_path(id: order, app: current_app.slug), local: true, html: { id: "staff_order" } ) do |form| %>
  <% if order.errors.any? %>
    <div id="error_explanation">
      <ul style="padding-left: 5%;">
      <% order.errors.full_messages.each do |message| %>
        <li style="font-size: 12px; color: red;"><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div>
    <div class="order-table">
      <table>
        <tbody>
          <tr>
            <td class="order-item"><%= t('orders.date') %></td>
            <td>
              <%= order.new_record? ? Date.current.strftime("%A %d of %B, %Y") : order.created_at.strftime("%A %d of %B, %Y") %>
            </td>
          </tr>
          <tr>
            <td colspan="2"><%= form.text_field :name, class: 'order-field', id: 'new_order_name', disabled: order.new_record? ? false : true, placeholder: t('orders.client_name') %></td>
          </tr>
          <tr>
            <td colspan="2"><%= form.email_field :email, class: 'order-field', id: 'new_order_email', disabled: order.new_record? ? false : true, placeholder: t('orders.email') %></td>
          </tr>
          <tr>
            <td colspan="2"><%= form.text_field :phone, class: 'order-field', id: 'new_order_phone', disabled: order.new_record? ? false : true, placeholder: t('orders.phone') %></td>
          </tr>
          <tr>
            <td colspan="2"><%= form.text_area :address, class: "order-field #{"d-none" if order.new_record?}", id: 'new_order_address', disabled: order.new_record? ? false : true, placeholder: t('orders.home_address') %></td>
          </tr>
          <tr>
            <td colspan="2" class="text-center">
              <div class="row field">
                <div class="text-center w-100">
                  <%= link_to_add_association t('orders.add_product'), form, :line_items, { "data-association-insertion-node": '#new-items',
                              class: 'btn btn-lg btn-outline-primary new-order-item',
                              onmouseover: 'changeNewRecipe();',
                              onmouseout: order.new_record? ? '' : 'addRecipeForm();' } %>
                </div>
              </div>
              <div class="row field" id="new-items"></div>
            </td>  
          </tr>
          <tr>
            <td colspan="2">
            <%= form.fields_for :line_items, @order.line_items.order(:created_at) do |line_item| %>
              <%= render 'line_item_fields', f: line_item %>
            <% end %>
            </td>
          </tr>
          <tr>
            <td class="order-item"><%= t('orders.tax') %></td>
            <% if order.new_record? %>
              <td><%= t('orders.tax_desc') %></td>
            <% else %>
              <td class="text-left pl-5"><%= number_to_currency(order.total_tax) %></td>
            <% end %>
          </tr>
          <tr>
            <td class="order-item"><%= t('orders.delivery') %></td>
            <% if order.new_record? %>
              <td><%= form.check_box :delivery_price, class: 'order-field', id: "delivery-checkBox" %></td>
            <% else %>
              <td class="text-left pl-5"><%= number_to_currency(order.delivery_price) %></td>
            <% end %>
          </tr>
          <tr>
            <td class="order-item"><%= t('orders.tip') %></td>
            <% if order.new_record? %>
              <td><%= form.number_field :tip_value, class: 'order-field', step: 1, min: 0 %></td>
            <% else %>
              <td class="text-left pl-5"><%= number_to_currency(order.tip_value) %></td>
            <% end %>
          </tr>
          <tr>
            <td class="order-item"><%= t('recipes.coupone_code') + ' / ' + t('orders.discount') %></td>
            <% if order.new_record? %>
              <td><%= form.text_field :coupon_code, class: 'order-field', id: 'coupon_code_input', onblur: 'checkCoupon();' %></td>
            <% else %>
              <td class="text-left pl-5"><%= order.coupon_code.present? ? order.coupon_code + ' / ' + number_to_currency(order.coupon_discount) : '---' %></td>
            <% end %>
          </tr>
          <tr>
            <% if order.new_record? %>
              <td class="order-item"><%= t('recipes.fundraising_code') %></td>
              <td><%= form.text_field :fundrasing_code, class: 'order-field', id: 'fundrasing_code_input', onblur: 'checkFundCoupon();' %></td>
            <% elsif order.fundrasing_code.present? %>
              <td class="order-item"><%= t('recipes.fundraising_code') %></td>
              <td class="text-left pl-5"><%= order.fundrasing_code %></td>
            <% end %>
          </tr>
          <tr>
            <td class="order-item"><%= t('recipes.total') %></td>
            <% if order.new_record? %>
              <td class="font-weight-bold">$0.00</td>
            <% else %>
              <td class="text-left pl-5 font-weight-bold">
                <%= number_to_currency(order.amount&./100.0) %>  
              </td>
            <% end %>
          </tr>
          <tr>
            <td class="order-item"><%= form.label :pay_method, t('orders.pay_method') %></td>
            <% if order.new_record? %>
              <td><%= 'Cash'.capitalize %></td>
            <% else %>
              <td class="text-left pl-4"><%= form.text_field :pay_method, class: 'text-left order-field order-paymethod ml-1', id: 'staff-order-paymethod', readonly: true %></td>
            <% end %>
          </tr>
          <tr>
            <td colspan="2" class="order-item pb-4 text-center">
              <%= form.submit t('orders.save'), class: 'btn btn-lg btn-primary mb-0', id: 'order-button', onmouseover: 'changeNewRecipe(); changeQuantity();' %>
              <% unless order.new_record? %>
                <span class="blue-btns">
                  <a href="#" onclick="window.print();return false;" class='btn btn-lg btn-info'>Print</a>
                  <%= link_to 'Email', app_send_order_email_path(order: order), class: 'btn btn-lg btn-info' %>
                </span>
              <% end %>
            </td>
          </tr>
          <% unless order.new_record? %>
            <tr>
              <td colspan="2"><%= form.select :status, Order.statuses.collect { |key, value| [key.capitalize, key] }, { class: 'order-status' } %></td>
            </tr>
          <% end %>
        </tbody>
      </table>
    </div>
  </div>
<% end %>

<%= javascript_include_tag "https://www.paypal.com/sdk/js?client-id=#{@paypal_client_id}" %>
<script type="text/javascript">
  var paypalEnv = "<%= Rails.configuration.paypal[:env] %>"
  var totalAmount = "<%= order&.amount&./100.0 %>"
  var newOrder = "<%= order.new_record? ? '1' : '0' %>"
  var orderBtn = document.getElementById("order-button");
  // var formOrderName = document.getElementById("new_order_name");
  // var formOrderEmail = document.getElementById("new_order_email");
  // var formOrderPhone = document.getElementById("new_order_phone");
  // var formOrderAddress = document.getElementById("new_order_address");

  function changeNewRecipe() {
    orderItems = document.querySelectorAll('[id ^= "order_line_items_attributes_"]');
    if (orderItems.length > 0) {
      orderBtn.disabled = false;
    } else {
      orderBtn.disabled = true;
    }
  }

  function removeNewRecipe() {
    orderItems = document.querySelectorAll('[id ^= "order_line_items_attributes_"]');

    if (orderItems.length > 3) {
      orderBtn.disabled = false;
    } else {
      orderBtn.disabled = true;
    }
  }

  // document.querySelectorAll('#new_order_name, #new_order_email, #new_order_phone, #new_order_address').forEach(event => {
  //   event.addEventListener('change', () => {
  //     orderItems = document.querySelectorAll('[id ^= "order_line_items_attributes_"]')
  //     if (orderItems.length > 0 && formOrderName.value.length > 0 && formOrderEmail.value.length > 0 && formOrderPhone.value.length > 0 && formOrderAddress.value.length > 0) {
  //       orderBtn.disabled = false;
  //     } else {
  //       orderBtn.disabled = true;
  //     }
  //   })
  // })

  function changeQuantity() {
    orderItems = document.querySelectorAll('[id ^= "order_line_items_attributes_"]');

    Array.from(orderItems).some((element) => {
      if (element.type === 'number') {
        if (parseInt(element.value, 10) >= 1 && parseInt(element.value, 10) !== NaN) {
          orderBtn.disabled = false;
        } 
        else {
          return orderBtn.disabled = true;
        }
      }
    });
  }

  function addRecipeForm() {
    paypalBtn = document.getElementById("paypal-button-container");
    paypalBtn.style.display = 'none';
  }

  function changeRecipeForm() {
    orderForm = document.getElementById("staff_order");
    orderForm.submit();
  }

  function changeQuantityRecipeForm() {
    quantityField = event.currentTarget
    
    if (parseInt(quantityField.value, 10) >= 1 && parseInt(quantityField.value, 10) !== NaN) {
      orderForm = document.getElementById("staff_order");
      orderForm.submit();
    } else {
      quantityField.style.border = '1px solid red';
    }
  }

  function checkCoupon() {
    var checkCouponInput = document.getElementById("coupon_code_input");

    fetch("/check-coupon", {
      method: "POST",
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ 'coupon_code': checkCouponInput.value }),
    })
    .then(function (response) {
      return response.json();
    })
    .then(function (result) {
      var couponCode = document.getElementById("coupon_code_input");
      if (result.error) {
        couponCode.setCustomValidity(result.error);
        couponCode.reportValidity();
        couponCode.value = "";   
      } else {
        couponCode.style.border = '2px solid lime'
        return result;
      }
    })  
    .catch(function (error) {
      console.log("Error: ", error);
    })
  }

  function checkFundCoupon() {
    var checkFundCouponInput = document.getElementById("fundrasing_code_input");

    fetch("/check-fundrasing", {
      method: "POST",
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ 'coupon_code': checkFundCouponInput.value }),
    })
    .then(function (response) {
      return response.json();
    })
    .then(function (result) {
      var couponCode = document.getElementById("fundrasing_code_input");
      if (result.error) {
        couponCode.setCustomValidity(result.error);
        couponCode.reportValidity();
        couponCode.value = "";   
      } else {
        couponCode.style.border = '2px solid lime'
        return result;
      }
    })  
    .catch(function (error) {
      console.log("Error: ", error);
    })
  }

  $('#delivery-checkBox').on('click', function() {
    if (this.checked) {
      $('#new_order_address').removeClass('d-none');
    } else {
      $('#new_order_address').addClass('d-none');
    }
  });

  paypal.Buttons({
    style: {
      layout: 'horizontal',
      size: 'responsive',
      color: 'gold',
      label: 'pay'
    },
    onInit: function(data, actions) {
    // Disable the buttons
      if (newOrder == '1') {
        actions.disable();
      }
    },
    env: paypalEnv, // Valid values are sandbox and live.
    createOrder: async () => {
    const response = await fetch('/paypal_create_payment', { 
      method: 'POST',
      headers: {
      'Content-Type': 'application/json'
      },
      body: JSON.stringify({ amount: totalAmount })
    });
    const responseData = await response.json();
    if (responseData.token) {
      return responseData.token;
    } else {
      return responseData.error;
    }
  },
    onApprove: async (data) => {
      const response = await fetch('/paypal_execute_payment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
    },
      body: JSON.stringify({ order_id: data.orderID })
    });
    const responseData = await response.json();
    if (responseData.data.table.status === 'COMPLETED') {
      // REDIRECT TO UPDATE-ORDER PAGE
      orderForm = document.getElementById("staff_order");
      var payMethod = document.getElementById("staff-order-paymethod");
      payMethod.value = 'paypal';
      orderForm.submit();
    }
  },
  onError: async (error) => {
    alert('INVALID_RESOURCE_ID');
  }
}).render('#paypal-button-container');
</script>
